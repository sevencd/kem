<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC   
    "-//mybatis.org//DTD Mapper 3.0//EN"  
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ilanhai.mybatismapper.VIPUserStatisticDao">
	<resultMap id="UserStatisticDto"
		type="cn.ilanhai.kem.domain.statistic.dto.UserStatisticDto">
		<id column="user_name" property="username" jdbcType="VARCHAR" />
		<result column="user_phone" property="phoneNo" jdbcType="VARCHAR" />
		<result column="user_email" property="email" jdbcType="VARCHAR" />
		<result column="starttime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="pay_way" property="payWay" jdbcType="INTEGER"
			typeHandler="cn.ilanhai.kem.domain.enums.PayWayTypeHandler" />
	</resultMap>
	<select id="selectStatisticForCount"
		resultType="cn.ilanhai.kem.domain.statistic.dto.VIPUserStatisticResponseDto">
		SELECT
		statistic.*, CONCAT(ROUND(statistic.vipAmount /
		statistic.registerAmount*100,2),'%') AS rate
		FROM
		(
		SELECT
		count(m.user_id) AS
		vipAmount,
		count(u.user_id) AS registerAmount
		FROM
		user_front_user u
		LEFT
		JOIN member_main m ON u.user_id = m.user_id
		WHERE
		u.user_type = 1
		) AS
		statistic
	</select>
	<select id="selectVIPUserForTotalCount" resultType="int">
		SELECT
		count(*)
		FROM
		member_main m
		LEFT JOIN
		prod_order o
		on m.user_id=o.user_id
		AND o.pay_status = 1
		AND
		o.description = '开通会员'
	</select>
	<select id="selectVIPUserForPage"
		parameterType="cn.ilanhai.kem.domain.statistic.dto.StatisticRequestDto"
		resultMap="UserStatisticDto">
		SELECT
		userNameFunSQL.user_name,
		userPhoneNoFunSQL.user_phone,
		userEmailFunSQL.user_email,
		m.starttime,
		ROUND(
		(
		TO_DAYS(m.endtime) -
		TO_DAYS(m.starttime)
		) / 30
		) AS duration,
		o.pay_way,
		CONVERT
		(o.pay_amount, DECIMAL(20, 2)) AS cash
		FROM
		member_main m LEFT JOIN
		(
		<include
			refid="cn.ilanhai.mybatismapper.ApplicationStatisticDao.userNameFunSQL"></include>
		)
		userNameFunSQL on m.user_id=userNameFunSQL.user_id
		LEFT JOIN
		(
		<include
			refid="cn.ilanhai.mybatismapper.ApplicationStatisticDao.userPhoneNoFunSQL"></include>
		)
		userPhoneNoFunSQL on m.user_id=userPhoneNoFunSQL.user_id
		LEFT JOIN
		(
		<include
			refid="cn.ilanhai.mybatismapper.ApplicationStatisticDao.userEmailFunSQL">
		</include>
		)userEmailFunSQL on m.user_id=userEmailFunSQL.user_id
		LEFT JOIN
		prod_order o
		on m.user_id=o.user_id
		AND o.pay_status = 1
		AND
		o.description = '开通会员'
		order by o.pay_time desc
		limit
		${startCount},${pageSize}
	</select>
	<!-- 用户姓名 -->
	<sql id="userNameFunSQL">
		SELECT
		IFNULL(t.user_id1, t.user_id2) AS user_id,
		IF (
		t.info_type2 = 1 and
		t.info2 IS NOT NULL,
		t.info2,
		t.info1
		) AS user_name
		FROM
		(
		SELECT
		t1.user_id AS user_id1,
		t2.user_id AS user_id2,
		t1.info_type
		AS
		info_type1,
		t2.info_type AS info_type2,
		t1.info AS info1,
		t2.info AS
		info2
		FROM
		(
		SELECT
		*
		FROM
		user_info_user
		WHERE
		info_type = 0
		AND info_state =
		1
		) t1
		LEFT JOIN (
		SELECT
		*
		FROM
		user_info_user
		WHERE
		info_type = 1
		AND
		info_state = 1
		) t2 ON t1.user_id = t2.user_id
		UNION
		SELECT
		t1.user_id AS
		user_id1,
		t2.user_id AS user_id2,
		t1.info_type AS info_type1,
		t2.info_type AS info_type2,
		t1.info AS info1,
		t2.info AS info2
		FROM
		(
		SELECT
		*
		FROM
		user_info_user
		WHERE
		info_type = 0
		AND info_state = 1
		) t1
		RIGHT JOIN (
		SELECT
		*
		FROM
		user_info_user
		WHERE
		info_type = 1
		AND info_state
		= 1
		) t2 ON t1.user_id = t2.user_id
		) t
	</sql>
	<!-- 用户手机号 -->
	<sql id="userPhoneNoFunSQL">
		SELECT
		user_id,
		identify as user_phone
		FROM
		user_identify_user
		WHERE
		identify_state = 1
	</sql>
	<!-- 用户邮箱 -->
	<sql id="userEmailFunSQL">
		SELECT
		user_id,
		identify as user_email
		FROM
		user_identify_user
		WHERE
		identify_state = 1
	</sql>
	<!-- 查询最新购买记录（备用） 开始 -->
	<sql id="latestPayTimeOrderGroupByUserId">
		SELECT
		oo.*
		FROM
		prod_order oo,
		(
		SELECT
		o.user_id,
		max(o.pay_time)
		AS 'maxpaytime'
		FROM
		prod_order o
		WHERE
		o.pay_status = 1
		AND o.description
		= '开通会员'
		GROUP BY
		o.user_id
		) sub
		WHERE
		oo.user_id =
		sub.user_id
		AND
		oo.pay_time = sub.maxpaytime
		AND oo.pay_status = 1
		AND
		oo.description =
		'开通会员'
	</sql>
	<!-- 查询最新购买记录（备用） 结束 -->

	<!-- 查询用户姓名（备用） 开始 -->
	<sql id="selectUserNameAndEmail">
		SELECT user_id,
		case
		when group_concat(uinfo.info_type) like
		'%0%' then uinfo.info
		when group_concat(uinfo.info_type) like '%1%'
		then uinfo.info
		end as user_name,
		case
		when group_concat(uinfo.info_type)
		like '%2%' then uinfo.info
		end as user_email
		FROM
		user_info_user uinfo
		GROUP BY
		uinfo.user_id
	</sql>
	<!-- 查询用户姓名（备用） 结束 -->

</mapper>